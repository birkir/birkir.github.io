{"version":3,"sources":["webpack:///./src/components/article/Article.tsx","webpack:///./src/components/article/slices/Code.tsx","webpack:///./src/components/article/slices/Text.tsx","webpack:///./src/components/article/slices/Quote.tsx","webpack:///./src/templates/Article.tsx","webpack:///./src/components/article/Article.scss?2d3f","webpack:///./src/components/article/Article.scss","webpack:///./src/components/article/slices/Text.scss?56b6","webpack:///./src/components/article/slices/Text.scss"],"names":["slices","Prime_Code","_ref","language","source","react_default","a","createElement","lib_default","component","className","Prime_Text","content","react_markdown_default","s","text","Prime_Quote","author","name","mapSlice","slice","index","SliceComponent","__typename","Object","assign","key","Article","title","body","article","map","__webpack_require__","d","__webpack_exports__","query","id","toString","this","data","prime","Article_Article","classNames","locals","css","bind","style","module","exports"],"mappings":"8MAeMA,EAAS,CACbC,WCPkB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,OAAb,OAClBC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAWG,UAAU,MAAMC,UAAS,YAAcP,GAC/CC,IDMHO,WERkB,SAAAT,GAAA,IAAGU,EAAHV,EAAGU,QAAH,OAClBP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAeI,UAAWI,IAAEC,KAAMX,OAAQQ,KFQ1CI,YGPmB,SAAAd,GAAA,IAAGU,EAAHV,EAAGU,QAASK,EAAZf,EAAYe,OAAZ,OACnBZ,EAAAC,EAAAC,cAAA,kBACGK,EADH,KACcK,EAAOC,QHQjBC,EAAW,SAACC,EAAcC,GAC9B,IAAMC,EAAiBtB,EAAOoB,EAAMG,YACpC,GAAID,EACF,OAAOjB,EAAAC,EAAAC,cAACe,EAADE,OAAAC,OAAA,CAAgBC,IAAKL,GAAWD,KAI9BO,EAAU,SAAAzB,GAAmC,IAAhC0B,EAAgC1B,EAAhC0B,MAAOC,EAAyB3B,EAAzB2B,KAC/B,OACExB,EAAAC,EAAAC,cAAA,WAASG,UAAWI,IAAEgB,SACpBzB,EAAAC,EAAAC,cAAA,MAAIG,UAAWI,IAAEc,OAAQA,GACxBC,EAAKE,IAAIZ,KI/BhBa,EAAAC,EAAAC,EAAA,0BAAAC,IAGO,IAAMA,EAAK,CAAAC,GAAA,aAAAhC,OAAA,kNAAAiC,SAAA,kBAAAC,KAAAF,KAgBHF,EAAA,iBAAAhC,GAAmB,IAAhBqC,EAAgBrC,EAAhBqC,KAChB,OAAKA,EAAKC,MAAMb,QAITtB,EAAAC,EAAAC,cAACkC,EAAYF,EAAKC,MAAMb,SAHtBtB,EAAAC,EAAAC,cAAA,kECpBX,IAAAmC,EAAyBV,EAAQ,IACjCW,EAAqBX,EAAQ,KAC7BY,EAAAF,EAAAG,KAAAF,GACA,QAAAG,KAAAH,EAAAC,EAAAE,GAAAH,EAAAG,GACAC,EAAAC,QAAAJ,uBCLAG,EAAAC,QAAA,CAAkBlB,QAAA,0BAAAF,MAAA,8CCClB,IAAAc,EAAyBV,EAAQ,IACjCW,EAAqBX,EAAQ,KAC7BY,EAAAF,EAAAG,KAAAF,GACA,QAAAG,KAAAH,EAAAC,EAAAE,GAAAH,EAAAG,GACAC,EAAAC,QAAAJ,uBCLAG,EAAAC,QAAA,CAAkBjC,KAAA","file":"component---src-templates-article-tsx-0e30ea07d23deebe9e48.js","sourcesContent":["import React from 'react';\nimport s from './Article.scss';\nimport { Code, CodeProps } from './slices/Code';\nimport { Quote, QuoteProps } from './slices/Quote';\nimport { Text, TextProps } from './slices/Text';\n\ntype Slice = CodeProps | TextProps | QuoteProps;\n\ninterface ArticleProps {\n  id: string;\n  title: string;\n  slug: string;\n  body: Slice[];\n}\n\nconst slices = {\n  Prime_Code: Code,\n  Prime_Text: Text,\n  Prime_Quote: Quote,\n};\n\nconst mapSlice = (slice: Slice, index: number) => {\n  const SliceComponent = slices[slice.__typename];\n  if (SliceComponent) {\n    return <SliceComponent key={index} {...slice as any} />;\n  }\n};\n\nexport const Article = ({ title, body }: ArticleProps) => {\n  return (\n    <article className={s.article}>\n      <h1 className={s.title}>{title}</h1>\n      {body.map(mapSlice)}\n    </article>\n  );\n};\n","import React from 'react';\nimport PrismCode from 'react-prism';\n\nexport interface CodeProps {\n  __typename: 'Prime_Code';\n  source: string;\n  language: string;\n}\n\nexport const Code = ({ language, source }: CodeProps) => (\n  <PrismCode component=\"pre\" className={`language-${language}`}>\n    {source}\n  </PrismCode>\n);\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport s from './Text.scss';\n\nexport interface TextProps {\n  __typename: 'Prime_Text';\n  content: string;\n}\n\nexport const Text = ({ content }: TextProps) => (\n  <ReactMarkdown className={s.text} source={content} />\n);\n","import React from 'react';\n\nexport interface QuoteProps {\n  __typename: 'Prime_Quote';\n  content: string;\n  author: {\n    name: string;\n    photo: string;\n  };\n}\n\nexport const Quote = ({ content, author }: QuoteProps) => (\n  <blockquote>\n    {content}- {author.name}\n  </blockquote>\n);\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport { Article } from '../components/article/Article';\n\nexport const query = graphql`\n  query Article($id: ID!) {\n    prime {\n      Article(id: $id) {\n        id\n        slug\n        title\n        date\n        body {\n          ...ArticleBodyFragment\n        }\n      }\n    }\n  }\n`;\n\nexport default ({ data }: any) => {\n  if (!data.prime.Article) {\n    return <p>Whoops. Could not find article.</p>;\n  }\n\n  return <Article {...data.prime.Article} />;\n};\n","\n        // classnames-loader: automatically bind css-modules to classnames\n        var classNames = require(\"!../../../node_modules/classnames/bind.js\");\n        var locals = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-1!../../../node_modules/css-loader/index.js??ref--11-2!../../../node_modules/postcss-loader/lib/index.js??postcss-3!../../../node_modules/sass-loader/lib/loader.js??ref--11-4!./Article.scss\");\n        var css = classNames.bind(locals);\n        for (var style in locals) css[style] = locals[style];\n        module.exports = css;\n    ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"Article--article--38kp1\",\"title\":\"Article--title--1daxb\"};","\n        // classnames-loader: automatically bind css-modules to classnames\n        var classNames = require(\"!../../../../node_modules/classnames/bind.js\");\n        var locals = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-1!../../../../node_modules/css-loader/index.js??ref--11-2!../../../../node_modules/postcss-loader/lib/index.js??postcss-3!../../../../node_modules/sass-loader/lib/loader.js??ref--11-4!./Text.scss\");\n        var css = classNames.bind(locals);\n        for (var style in locals) css[style] = locals[style];\n        module.exports = css;\n    ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Text--text--1nI7R\"};"],"sourceRoot":""}